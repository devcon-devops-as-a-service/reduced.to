# This is a basic workflow to help you get started with Actions

name: main workflow

# Controls when the workflow will run 6
on:
  workflow_call:
    inputs:
      stack:
        required: true
        type: string
      securityScan:
        required: true
        type: boolean

jobs:
  preperation:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.bumpServices.outputs.servicesToBuild }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install Npm packages
        if: ${{ inputs.stack == 'nx' }}
        run: npm ci

      - name: Bump Services
        id: bumpServices
        uses: ./.github/actions/bumpServices
        with:
          stack: ${{ inputs.stack }}

      - name: Echo Services output
        run: echo ${{ steps.bumpServices.outputs.servicesToBuild }}

  build-test-push:
    name: Build ${{ matrix.project }}
    needs: preperation
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.preperation.outputs.services) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install Npm packages
        if: ${{ inputs.stack == 'nx' }}
        run: npm ci

      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Test Nx
        if: ${{ inputs.stack == 'nx' }}
        run: |
          npx nx test ${{ matrix.project }}

      - name: Build Docker Image
        run: docker build -f apps/${{ matrix.project }}/Dockerfile . -t acrdeccondemo.azurecr.io/${{ matrix.project}}:${{ matrix.nextVersion }}

      - name: Push Docker Image to ACR
        run: |
          az acr login -n acrdeccondemo
          docker push acrdeccondemo.azurecr.io/${{ matrix.project}}:${{ matrix.nextVersion }}

      - name: Tag Service in git
        uses: ./.github/actions/bumpServices
        with:
          service: ${{ matrix.project }}
          version: ${{ matrix.nextVersion }}

      - name: Run Microsoft Security DevOps
        if: ${{ inputs.securityScan }}
        uses: microsoft/security-devops-action@latest
        id: msdo
        with:
          tools: trivy

  argoupdate:
    runs-on: ubuntu-latest
    steps:
      - name: argocd cli installation
        run: |
          VERSION=$(curl -L -s https://raw.githubusercontent.com/argoproj/argo-cd/stable/VERSION)
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v$VERSION/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: argo update
        run: |
          argocd app create ${{ inputs.appname }} --repo ${{ inputs.repourl }}  --path  --dest-server https://kubernetes.default.svc --dest-namespace
